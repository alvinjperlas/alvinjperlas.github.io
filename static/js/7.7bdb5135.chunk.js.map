{"version":3,"sources":["components/Contact/EmailLink.js","pages/Index.js","data/contact.js","components/Contact/ContactIcons.js"],"names":["validateText","text","test","length","messages","EmailLink","useState","idx","updateIter","message","updateMessage","char","updateChar","isActive","setIsActive","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","newIdx","newChar","slice","className","style","color","onMouseEnter","onMouseLeave","href","Index","Main","description","to","src","process","alt","ContactIcons","data","link","label","icon","faGithub","faFacebookF","faInstagram","faLinkedinIn","faTwitter","faEnvelope","map","s"],"mappings":"8KAGMA,EAAe,SAACC,GAIpB,MADW,mEACDC,KAAKD,IAAyB,IAAhBA,EAAKE,QAGzBC,EAAW,CACf,2BACA,0BACA,oBACA,WACA,wCACA,wCACA,+BACA,gDACA,qBACA,iBACA,kBACA,uDA6DaC,EAxCG,WAChB,IADsB,EAIIC,mBAAS,GAJb,mBAIfC,EAJe,KAIVC,EAJU,OAKWF,mBAASF,EAASG,IAL7B,mBAKfE,EALe,KAKNC,EALM,OAMKJ,mBAASF,EAASG,GAAKJ,QAN5B,mBAMfQ,EANe,KAMTC,EANS,OAOUN,oBAAS,GAPnB,mBAOfO,EAPe,KAOLC,EAPK,KAyBtB,OA3CkB,SAACC,EAAUC,GAC7B,IAAMC,EAAgBC,mBAEtBC,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAEJI,qBAAU,WACR,GAAIH,EAAO,CACT,IAAMK,EAAKC,aAAY,WACrBL,EAAcG,YACbJ,GACH,OAAO,kBAAMO,cAAcF,IAE7B,OAAO,eACN,CAACL,IAYJQ,EAAY,WACV,IAAIC,EAASlB,EACTmB,EAAUf,EACVA,EAXO,IAWQP,EAASG,GAAKJ,SAC/BsB,GAAU,EACVC,EAAU,GAERD,IAAWrB,EAASD,OACtBW,GAAY,IAEZJ,EAAcN,EAASqB,GAAQE,MAAM,EAAGD,IACxClB,EAAWiB,GACXb,EAAWc,EAAU,MAEtBb,EArBW,GAqBQ,MAGpB,qBACEe,UAAU,mBACVC,MAAO7B,EAAaS,GAAW,GAAK,CAAEqB,MAAO,WAC7CC,aAAc,kBAAMjB,GAAY,IAChCkB,aAAc,kBAAOzB,EAAMH,EAASD,QAAWW,GAAY,IAJ7D,SAME,oBAAGmB,KAAMjC,EAAaS,GAAb,UAA2BA,GAAY,GAAhD,UACE,+BAAOA,IACP,+BC1COyB,UA1BD,kBACZ,eAACC,EAAA,EAAD,CACEC,YAAa,mCADf,UAGE,yBAASR,UAAU,OAAOP,GAAG,QAA7B,SACE,0BAASA,GAAG,QAAZ,UACE,cAAC,IAAD,CAAMgB,GAAG,IAAIT,UAAU,OAAvB,SACE,qBAAKU,IAAG,UATKC,GASL,kBAAiCC,IAAI,OAE/C,mCACE,8CACA,4BAAG,mBAAGP,KAAK,gCAAR,yCAEL,iCAAQ,cAAC,EAAD,WAKZ,0BAASZ,GAAG,SAAZ,UACE,cAACoB,EAAA,EAAD,IACA,oBAAGb,UAAU,YAAb,kCAAkD,cAAC,IAAD,CAAMS,GAAG,IAAT,6BAAlD,e,0GCaSK,EAjCF,CACX,CACEC,KAAM,kCACNC,MAAO,SACPC,KAAMC,YAER,CACEH,KAAM,oCACNC,MAAO,WACPC,KAAME,eAER,CACEJ,KAAM,qCACNC,MAAO,YACPC,KAAMG,eAER,CACEL,KAAM,uCACNC,MAAO,WACPC,KAAMI,gBAER,CACEN,KAAM,mCACNC,MAAO,UACPC,KAAMK,aAER,CACEP,KAAM,gCACNC,MAAO,QACPC,KAAMM,eCpBKV,IAZM,kBACnB,oBAAIb,UAAU,QAAd,SACGc,EAAKU,KAAI,SAACC,GAAD,OACR,6BACE,mBAAGpB,KAAMoB,EAAEV,KAAX,SACE,cAAC,IAAD,CAAiBE,KAAMQ,EAAER,UAFpBQ,EAAET","file":"static/js/7.7bdb5135.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n// Validates the first half of an email address.\nconst validateText = (text) => {\n  // NOTE: Passes RFC 5322 but not tested on google's standard.\n  // eslint-disable-next-line no-useless-escape\n  const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\n  return re.test(text) || text.length === 0;\n};\n\nconst messages = [\n  'Senior Software Engineer',\n  'Active Secret Clearance',\n  'Team Collaborator',\n  'Musician',\n  'Foodie -- I love trying out new foods',\n  'Currently pursuing Archery as a hobby',\n  'Father of two beautiful kids',\n  'Ex-Gamer; Stopped playing games after kids :(',\n  'I love pranks.. :)',\n  'just-saying-hi',\n  'Let\\'s connect! ',\n  'Thanks for taking the time to view my landing-page!',\n];\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay) {\n      const id = setInterval(() => {\n        savedCallback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n    return () => {}; // pass linter\n  }, [delay]);\n};\n\nconst EmailLink = () => {\n  const hold = 50; // ticks to wait after message is complete before rendering next message\n  const delay = 50; // tick length in mS\n\n  const [idx, updateIter] = useState(0); // points to current message\n  const [message, updateMessage] = useState(messages[idx]);\n  const [char, updateChar] = useState(messages[idx].length); // points to current char\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n\n  useInterval(() => {\n    let newIdx = idx;\n    let newChar = char;\n    if (char - hold >= messages[idx].length) {\n      newIdx += 1;\n      newChar = 0;\n    }\n    if (newIdx === messages.length) {\n      setIsActive(false);\n    } else {\n      updateMessage(messages[newIdx].slice(0, newChar));\n      updateIter(newIdx);\n      updateChar(newChar + 1);\n    }\n  }, isActive ? delay : null);\n\n  return (\n    <div\n      className=\"inline-container\"\n      style={validateText(message) ? {} : { color: '#2d56d2' }}\n      onMouseEnter={() => setIsActive(false)}\n      onMouseLeave={() => (idx < messages.length) && setIsActive(true)}\n    >\n      <a href={validateText(message) ? `${message}` : ''}>\n        <span>{message}</span>\n        <span></span>\n      </a>\n    </div>\n  );\n};\n\nexport default EmailLink;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\nimport ContactIcons from '../components/Contact/ContactIcons';\nimport EmailLink from '../components/Contact/EmailLink';\n\nconst { PUBLIC_URL } = process.env; // set automatically from package.json:homepage\n\nconst Index = () => (\n  <Main\n    description={\"Alvin Perlas's personal website.\"}\n  >\n    <article className=\"post\" id=\"index\">\n      <section id=\"intro\">\n        <Link to=\"/\" className=\"logo\">\n          <img src={`${PUBLIC_URL}/images/me.jpg`} alt=\"\" />\n        </Link>\n        <header>\n          <h2>Alvin Perlas</h2>\n          <p><a href=\"mailto:alvinjperlas@gmail.com\">alvinjperlas@gmail.com</a></p>\n        </header>\n        <center><EmailLink /></center>\n      </section>\n     \n    </article>\n\n    <section id=\"footer\">\n      <ContactIcons />\n      <p className=\"copyright\">&copy;Alvin Perlas &nbsp;<Link to=\"/\">alvinperlas.com</Link>.</p>\n    </section>\n\n  </Main>\n);\n\nexport default Index;\n","import { faGithub } from '@fortawesome/free-brands-svg-icons/faGithub';\nimport { faFacebookF } from '@fortawesome/free-brands-svg-icons/faFacebookF';\nimport { faInstagram } from '@fortawesome/free-brands-svg-icons/faInstagram';\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons/faLinkedinIn';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons/faTwitter';\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons/faEnvelope';\n// See https://fontawesome.com/icons?d=gallery&s=brands,regular&m=free\n// to add other icons.\n\nconst data = [\n  {\n    link: 'https://github.com/alvinjperlas',\n    label: 'Github',\n    icon: faGithub,\n  },\n  {\n    link: 'https://facebook.com/alvinjperlas',\n    label: 'Facebook',\n    icon: faFacebookF,\n  },\n  {\n    link: 'https://instagram.com/alvinjperlas',\n    label: 'Instagram',\n    icon: faInstagram,\n  },\n  {\n    link: 'https://www.linkedin.com/in/aperlas/',\n    label: 'LinkedIn',\n    icon: faLinkedinIn,\n  },\n  {\n    link: 'https://twitter.com/alvinjperlas',\n    label: 'Twitter',\n    icon: faTwitter,\n  },\n  {\n    link: 'mailto:alvinjperlas@gmail.com',\n    label: 'Email',\n    icon: faEnvelope,\n  },\n];\n\nexport default data;\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport data from '../../data/contact';\n\nconst ContactIcons = () => (\n  <ul className=\"icons\">\n    {data.map((s) => (\n      <li key={s.label}>\n        <a href={s.link}>\n          <FontAwesomeIcon icon={s.icon} />\n        </a>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactIcons;\n"],"sourceRoot":""}